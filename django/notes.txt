mkvirtualenv -p python3 bj_py
进入虚拟环境工作 workon 虚拟环境名称
查看机器有多少个虚拟环境
workon 空格 + 两个tab
退出虚拟环境
deactivate
rmvirtualenv删除虚拟环境
pip install django==1.8.2
pip list

pip freeze
ls 查看目录
cd ..返回上一级目录
tree查看目录结构
django-admin startproject django_notes_01
使用manage.py startapp blog创建init admin migrations models test view结构
建立应用和项目之间的联系 需要对应用进行注册

__init__.py说明test1是一个python包
setting.py 项目的配置文件
urls.py 访问的地址url路由的配置
wsgi.py web服务器和django交互的入口
manage.py项目的管理文件管理Django的项目

一个模块用一个应用实现
创建应用

python manage.py startapp 应用名


Models.py数据库相关的内容
Views.py接受请求，处理，与mt进行交互，处理请求一个请求对应一个处理函数
Test.py写测试代码的文件
admin.py网站后台管理
建立应用和项目之间的联系，需要对应应用注册
setting.py Installend_App 进行注册

python3 manage.py runserver如果显示端口被占用 那么 使用slof -i:8000查看端口号 kill -9 id号杀掉id
拷贝网站


ORM object对象和类 relation关系数据表 mapping映射
Models.py设计和表对应的类模型类
ORM框架
model.py 写入类， 生成迁移文件python3 manage.py makemigrations 执行迁移生成表python3 manage.py migrate


From moduel_01.models import BookInfo
b=BookInfo()
b.btitle="123"
From date time import date
b.bpub_date=date(1990,1,1)
b.save()
b2=BookInfo.objects.get(id=1)
b2.btitle
b2.bpub_date=(1001,1,1)
b2.save()
b2.delete()
>>> from moduel_01.models import BookInfo,HeroInfo
>>> b=BookInfo()
>>> b.bititle="hah"
>>> from datetime import date
>>> b.bpub_date=date(1990,1,1)
>>> b.save
<bound method Model.save of <BookInfo: BookInfo object (None)>>
>>> b.save()
>>> h=HeroInfo()
>>> h.hname="duanyu"
>>> h.hgender="False"
>>> h.hgende=False
>>> h.hcomment="liumaishenqian"
>>> h.hbook=b
>>> h.save()

b.heroinfo_set.all()
后台管理，
本地化时区和语言
修改setting。py
创建管理员
python3 manage.py createsuperuser
 
